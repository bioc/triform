require(RUnit)
require(triform)
filePath = system.file("vignettes/config.yml", package="triform")
filePath
system.file(package="triform")
system.file("vignettes", package="triform")
system.file("./vignettes", package="triform")
### vignettes not in installed package
### Use local directory with mock data instead.
commandArgs()
getwd()
file.exists("./mockdata.bed")
list.dir(".")
list.files(".")
getwd()
mock
get(mock, envir=tmpenv)
mock
length(mock)
class(mock)
?mock
?RangedData
start(mock)
space(mock)
unique(space(mock))
test_makeRangedData()
mock
start(mock)
spaces(mock)
space(mock)
levels(space(mock))
mock[[1]]
mock[[2]]
mock[1]
mock[2]
start(mock["chrX"])[1]
names(mock)
mock
mock$SIZE
mock$SIZE$"-"
mock[[1]][[1]]
list.files("./", pattern="chr._RData$", full.names=TRUE)
list.files("./", pattern="chr?_RData$", full.names=TRUE)
list.files("./", pattern="chr._mockdata.RData$", full.names=TRUE)
list.files(".", pattern="chr._mockdata.RData$", full.names=TRUE)
mock
str(mock)
mock[[1]]
mock[[1]]
file.path(path, "mockdata.bed")
test_makeRangedData()
test_makeChromosomeCoverFiles()
test_makeChromosomeCoverFiles()
test_mergeChromosomesCoverFiles()
n
